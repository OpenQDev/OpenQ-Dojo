// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateSuccess extends ethereum.Event {
  get params(): CreateSuccess__Params {
    return new CreateSuccess__Params(this);
  }
}

export class CreateSuccess__Params {
  _event: CreateSuccess;

  constructor(event: CreateSuccess) {
    this._event = event;
  }

  get id(): string {
    return this._event.parameters[0].value.toString();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get age(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CreateSuccess1 extends ethereum.Event {
  get params(): CreateSuccess1__Params {
    return new CreateSuccess1__Params(this);
  }
}

export class CreateSuccess1__Params {
  _event: CreateSuccess1;

  constructor(event: CreateSuccess1) {
    this._event = event;
  }

  get id(): string {
    return this._event.parameters[0].value.toString();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MyContractV2_AddEventParam extends ethereum.SmartContract {
  static bind(address: Address): MyContractV2_AddEventParam {
    return new MyContractV2_AddEventParam(
      "MyContractV2_AddEventParam",
      address
    );
  }

  VERSION_1(): i32 {
    let result = super.call("VERSION_1", "VERSION_1():(uint8)", []);

    return result[0].toI32();
  }

  try_VERSION_1(): ethereum.CallResult<i32> {
    let result = super.tryCall("VERSION_1", "VERSION_1():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  VERSION_2(): i32 {
    let result = super.call("VERSION_2", "VERSION_2():(uint8)", []);

    return result[0].toI32();
  }

  try_VERSION_2(): ethereum.CallResult<i32> {
    let result = super.tryCall("VERSION_2", "VERSION_2():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class AddFooCall extends ethereum.Call {
  get inputs(): AddFooCall__Inputs {
    return new AddFooCall__Inputs(this);
  }

  get outputs(): AddFooCall__Outputs {
    return new AddFooCall__Outputs(this);
  }
}

export class AddFooCall__Inputs {
  _call: AddFooCall;

  constructor(call: AddFooCall) {
    this._call = call;
  }

  get id(): string {
    return this._call.inputValues[0].value.toString();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddFooCall__Outputs {
  _call: AddFooCall;

  constructor(call: AddFooCall) {
    this._call = call;
  }
}

export class AddFoo1Call extends ethereum.Call {
  get inputs(): AddFoo1Call__Inputs {
    return new AddFoo1Call__Inputs(this);
  }

  get outputs(): AddFoo1Call__Outputs {
    return new AddFoo1Call__Outputs(this);
  }
}

export class AddFoo1Call__Inputs {
  _call: AddFoo1Call;

  constructor(call: AddFoo1Call) {
    this._call = call;
  }

  get id(): string {
    return this._call.inputValues[0].value.toString();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get age(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddFoo1Call__Outputs {
  _call: AddFoo1Call;

  constructor(call: AddFoo1Call) {
    this._call = call;
  }
}
